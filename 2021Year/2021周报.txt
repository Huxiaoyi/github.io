2021年
1.识电U算法迭代，联调测试
2.识电算法下沉至：装置报文商榷：
3.生产环境1min_aiao,1min_index数据清理：清理至2020年10月
4.装置断数检测新需求开发

1.管理版季度服务报告开发
2.point_1min_index、location_1min_aiaio按月拆分存储

1.ES数据表(point_1min_index、location_1min_aiaio)拆分：
	1⃣️补录拆分表历史数据
	2⃣️.数据表拆分相关业务（识电U，知电U、安电U管理版，服务报告）修改，已更新至生产环境
2.知电U管理版：
	1⃣️.需量管理输出数据改成按进线存 
	2⃣️.功率因素、经济运行、功率因素重刷8月之前历史数据，并清理2019年脏数据 
	3⃣️.修复电能质量重复数据：清理重复数据，重建唯一索引

3月份
1.下发识电U用电设备特征库、突变波动阈值接口
2.get装置配置接口拆分、2.0架构报文协议、装置配置梳理
3.测试环境point_1min_index、location_1min_aiaio服务停止和数据清理
4.识电U2.0版本雏形开发
5.TiDB部署准备-TiKV环境准备

1.经济运行bug查修(电量电费数据异常、进线变压器容量缺失、进线接入配置错误)
2.识电U2.0需求评审，楼层、用户映射表设计创建
3.识电U2.0事件配置同步，梳理、兼容1.0版本soe配置下发
4.识电U2.0算法对接：输入输出数据流完成对接

1.识电U波动算法对接、服务部署
2.location hour、month服务废弃和index删除
3.15min_index新增fdi字段、开发脚本回补历史数据缺失字段
4.识电U2.算法对接、调试
5.识电U新旧版本无缝切换方案：装置升级软件版本后，重新配置product id权限，即可使用新版本识电U
6.历史事件电动车电池type改为违规电器


1.测试环境实时计算服务(adio、electric、soe、scope)迁往dev_time_address服务器
2.查修深圳湾科创广场电量电费没有数据问题
3.服务瘫痪优化：用TTLCache缓存mysql查询，减少IO时间，提升消费Kafka消息速度约3～6倍，
  优化后速度：写单个electric，取缓存数据时间约5ms，写ES时间约10ms，消费一个electric主题消息约15ms
4.location-1min、15min、1day因k2es服务瘫痪导致缺失数据补录
5.monitor表创建、以及point、location表数据同步
6.旧版识电U算法迭代、测试
7.识电U训练算法对接：训练算法的存储、服务、运维方案定稿，算法对接完成60%

1.对接识电U训练算法，训练结果作为用户特征库C，已在测试环境部署服务；
2.生产环境相关服务扩服（杰恩大厦新接189户）
3.修复aiao_15min、1day mysql-TooManyConnections报错
4.查询联合钢铁2月份甲线节费空间为0问题
5.cal_index_15min进程服务增加计算时间偏移，降低CPU峰值，平滑CPU使用率

4月份
1.重新对接识电U2.0算法、训练算法，做实验联调测试
2.识电U测试环境造测试数据 
3.写脚本导好莱客、兴隆轮毂electric数据和华侨新村识电U告警数据
4.联动控制问题查修，重新全面梳理联动控制功能模块

1.识电U事件等级修改、历史告警数据等级修改，热得快事件清理
2.识电U识别算法、训练算法测试
3.新版识电U上生产环境，及数据异常查修
4.训练算法存储优化，历史接入旧版识电U算法批量训练
5.运维：数据异常检测脚本开发，已完成80%

1.识电U：
    1⃣️数据统计脚本开发、导数据；
    2⃣️识电U电动车电池告警修改、增加实验场景；
    3⃣️识电U查修云端与本地识别不一致问题：云端算法与本地数据输入有概率不一致；
    4⃣️识电U协助算法查验数据，参数调优，以降低误报，过滤频繁正常电器识别结果
    5⃣️识电U新增用户设备参数表；
    6⃣️查修ES告警与行为曲线不一致问题：同一个时间点会出现多个识别结果，导致相互覆盖；
2.深圳湾扬尘项目：重做水表服务和数据；
3.运维：完成数据异常检测脚本开发，已部署在测试环境观察

1.深圳湾扬尘项目：
  ①.重做TSP服务和数据:tsp2redis、tsp_15min；
  ②.做喷淋、雾炮15min运行状态数据，存入mysql；
  ③.数据核验，项目上生产环境；
2.查修联动控制通信中断问题，装置上传数据频繁超时；
3.导项目服务报告、告警数据、电动车电池告警数据；
4.温升事件告警加上当前温度限制：大于40度；
5.识电U项目：
  ①.新增用户场景：可以任意配置用户为实验场景、试点场景、生产环境场景；
  ②.识电U算法联调测试、优化；

5月份
1.智电U:
  ①.参与智电U评审会；
  ②.电压、电流越限，电流谐波有效值计算等需求核验；
  ③.梳理智电U五级层级概念，新建变压器、馈线、配电表；
2.识电U
  ①.算法迭代：针对不同的用户，不同的电器使用不同的延迟时间方案；
  ②.热得快算法对接（已上测试环境）；
3.运维：
  ①.数据异常检测新需求迭代，服务上生产环境；
  ②.修复装置接入脚本-拆下的旧装置接入新项目时，change_sensor_record、
    location、meter_param_record表写入错误bug；
4.业务后台：
  ①.cal_15min_index服务切分整理、服务扩展；
  ②.开发脚本恢复投资大厦之前清理掉的温升告警数据；


1. 识电U:热得快算法上生产环境
2. tidb集群部署前软硬件环境配置
3. 智电U5级层级迭代：
  ①. 新建device_level、inline_zdu表，并做数据迁移
  ②. monitor表新增m_type字段，并做数据迁移	
4. 查证日最高负荷和月最高负荷不一致问题：需要后期重新做一套company_index数据
5. 清理13号线下松站异常的过流告警数据（装置变比错误）、用电监测异常数据（接入变比配置错误）
6. 业务后台服务cid扩展至300，完成60%


1. 业务后台服务cid扩展至300；
2. inline_zdu做历史数据迁移，install运维接入脚本新增inline_zdu表写入、更新；
3. 测试环境部署tidb、解决部署过程中配置问题；
4. 研究tidb压测方案；
5. 识电U算法迭代；
6. 查修投资大厦没有电量电费数据问题；

6月
1.tidb集群：
  ①.使用sysbench对tidb做性能测试，比较读写、只读、只写三种模式下QPS、TPS和查询延时；
  ②.提升CPU核数、内存继续做性能测试，以达到满足高并发需求；
  ②.研究tidb集群扩缩容，反复尝试各种方案坑点；
2.扬尘项目：
  ①.水表、雾炮机日数据统计脚本开发和服务部署；
  ②.补日统计历史数据；
  ③.解决日数据和15min数据因延迟不一致问题；


1.tidb集群压测：
  ①.tidb集群压测方案三: 20 * 1000万数据，6PD、6db、7tikv。
  ②.tidb集群压测方案四: 加上负载均衡压测。
  ③.tidb集群压测方案五：32 * 1000万数据，4PD、4db、3tikv。
2.对接小作坊：
  ①.部署小作坊写入qingstor和es服务。
  ②.开发小作坊服务。
3.识电U算法迭代
4.tidb部署、压测文档撰写

1.识电U项目新接入电烙铁、小作坊(电烙铁)、电暖风三类违规电器；
2.识电U行为曲线数据表改造，以兼容更多类别电器：新增电器类别字段，刷历史电器类别字段，重建索引；
3.小作坊识别算法开发；
4.识电U业务后台服务迭代，识别算法迭代、对接；
5.Celery基础入门；

1.识电U算法迭代、测试，配合客户验收测试；
2.接南园识电U项目到测试环境，测试环境扩服，开发批量自定义测试工具；
3.用publisher模拟装置报文，测试旧版power_iot对power_iot2.0协议的兼容性；
4.安装新电脑业务后端开发环境;
5.Celery学习；


1.识电U优化：去掉redis配置，集中到一张mysql表，对算法类别、告警推送配置作分离，配置更灵活；
2.识电U电动车电池、电烙铁算法迭代，协助算法迭代升级、调试；
3.对接装置ratio_ids配置接口
4.导6月月度服务报告数据
5.Celery、flower深入学习

1.识电U：电动车电池、电烙铁算法迭代、测试；
2.根据识别结果批量导原始报文数据工具开发；
3.识电U报警数据统计工具开发；
4.智维U需求评审会；
5.智维U：重新设计、开发运维报警功能；

1.识电U算法迭代、测试；
2.开发统计qingstor某SIDs任意时间段各个主题数据条数脚本；
3.生产环境、测试环境Kafka数据堆积处理；
4.验证并修复青云API（list_objects接口）bug；
5.导南园街道识电U项目6月报警、电量、负载数据；
6.重刷历史线路负载错误报警数据；
7.接手运维工作-装置接入内容

1.13号线3#塔吊、木头龙4#塔吊两个监测点换表逻辑异常查修（运维接入错误）；
2.识电U算法迭代、测试；
3.从冷库恢复星群药业7月1-7号因欠费导致缺失数据；
4.接手运维工作：装置拆除、更换内容；
5.智维U：新增monitor流水表，装置拆除、装置更换开发，兼容识电U的一分三；
6.运维脚本优化：将event_sync事件同步脚本迁移至install接入脚本；
7.休假一天；


1.修改告警事件与微信告警推送时间、频次完全同步；
2.装置拆除、装置更换接口开发；
3.教运维新人接入装置、更换装置相关操作；
4.修复换表逻辑从sid反推pid、lid错误bug；
5.同步change_sensor_record、monitor_his_record历史换表流水数据；
6.导5月、6月、7月安电项目月度服务报告给营销；
7.识电U算法迭代、测试；
8.休假一天；

1.处理location表重复脏数据；
2.修复adio报错，adio兼容2.0协议；
3.清理中建一局代理历史异常脏数据；
4.智维U：修复录波没有数据bug；
5.uinify新抽取一套aiomysql接口，以处理拆表、换表事务，重新改写接口、交付；


1.monitor、monitor_his_record表新增meter_no字段
  ①.修复monitor表前期因运维手动改表不全遗留的脏数据；
  ②.补上述字段历史缺失数据；
  ③.更新换表、运维接入脚本相应逻辑；
2.修复运维测试服务器统计qingstor数据异常bug；
3.智维U测试环境、生产环境协助测试装置拆除、装置更换功能；
4.新增手动（工厂后期新增若干监测点情况）安装alarm_setting脚本，交付运维；
5.开发工具，用指定版本算法重刷识电U工厂历史电池识别数据，并按格式导出Excel文件；


1. 银行本地项目:
  ①. 各个功能模块实现梳理，数据存储设计梳理，及功能分析文档撰写；
  ②. 配电系统图：前端、运维、后台三方交互折衷讨论，及存储方案设计；尽量减少运维操作复杂度
  ③. 了解can总线协议相关；
2. 2.0架构数据库schemas重新设计整理，大概完成70%；



1. 完成2.0架构数据库schemas重新设计；
2. 快速学习TDengine时序数据库基本使用语法；
3. 快速学习MiniO，部署MiniO集群；
4. MiniO集群部署坑点整理，部署文档撰写；
5. 识电U-电烙铁识别增加电能质量异常点配置，电烙铁算法升级迭代；
6. MiniO基础库封装(完成70%)；

1.识电U线上线下识别不一致核查、配置统一核查；
2.漏电流录波算法对接、上线；
3.TDengine开发环境搭建：
  ①.Mac下TDengine开发环境搭建（TDengine不支持Mac）
  ②.安装ubuntu虚拟机，搭建TDengine开发环境搭建，排查本地不能连接TDengine问题（FQDN配置缺失）
  ③.本地从TDengine拿数据时区不一致问题；
4.识电U算法升级、迭代，协助问题排查；

1.Mac下TDengine开发环境搭建(升级Mac系统至Catalina，用源码安装TDengine，注意TDengine版本要与服务器版本严格一致)；
2.TDengine基础库封装；
3.录波重做、整理：
  ①.录波兼容二表法(二表法录波功能暂时去除)，录波配置新增漏电流录波配置；
  ②.录波配置规范化(表字段拆分)，录波配置协议对接、文档整理；
  ③.重新开发录波同步脚本 录波改为运维人员接入工厂后再同步录波配置至mysql；
4.测试环境接入部分装置数据至minio对象存储，与青云对象存储做对比；
5.point_15min新架构业务重写、测试；
6.识电U：
  ①.手动接5个识电U用户至识电U测试工厂;
  ②.识电U算法迭代，协助bug排查；



1.TiDB热点问题：tidb AUTO_RANDOM代替AUTO_INCREMENT解决热点问题；
2.mqtt写入Kafka过程中，将解包失败的sid、时间戳写入tdengine；
3.对接城安苑，开发根据soe告警事件，导出相同时间electric、adio数据脚本，部署、交付运维；
4.参加路灯项目洽谈会；
5.迁移集群部署confluence文档至XWiki；
6.研究青云TiDB服务压测方案和调优点；

1.青云TiDB集群做压测，压测性能指标统计方式纠错，基本达到官网水准；
2.统计mqtt写入Kafka解包失败分布情况，解包失败新增payload写入；
3.对接城安苑，写按pid下载电气量数据脚本，交付运维；
4.electric_1day、power_15min新架构业务重写;

1.在测试环境部署tidb集群：
  ①.软硬件环境配置，系统环境配置；
  ②.tidb账号创建、负载均衡、vpc防火墙配置
2.mysql数据迁移至tidb，已迁移company、point相关、inline、monitor、proxy；
3.查修运维缺失数据检测服务每小时推送问题：redis数据未过期数据丢失问题；
4.测试环境部署2.0架构项目环境:PYTHONPATH多项目配置，supervisor-runinenv配置；
5.协助查识电U数据问题；


1. 修复运维报警-数据缺失频繁推送问题：Redis内存峰值超限，导致key未过期就被删除；
2. mysql数据迁移：location、location换表相关；
3. aiao_15min、aiao_1day新架构业务重写，并部署至测试环境；
4. 研究单服务器多项目PYTHONPATH部署，PYTHONPATH可以随虚拟环境的切换而作同步切换；
5. 对接城安苑，开发同时导出electric、adio数据脚本，交付运维；
6. 解决测试环境ELK磁盘不够用不想扩容问题：
   ①.先删掉ELK整个月份的表，释放空间（只删表doc并不释放相应磁盘空间）；
   ②.开发重刷实验点、客户验收点某几天的electric数据，方便算法后期调试；
7. 国产验收：开发统计国产芯片装置和ST芯片装置每天断数脚本，交付运维；
8. 1.0架构升级1.5架构业务后台各功能模块梳理；

1. ELK、Kafka服务扩容，扩容问题跟进；
2. point、inline、company电量电费新架构业务重写，并部署至测试环境；
3. 修复测试环境电量电费兼容2.0协议装置问题(n、p转+、—)；
4. 批量修改mysql表字段命名使用mysql数据库关键字；
5. 核验，下架生产环境、测试环境旧版安电U的电能质量算法相应进程服务；

1. 学习pytest测试框架, 深入学习mark、fixture、parametrize、kwparametrize等特性；
2. 重新整理pot项目目录结构、调整测试环境开发环境，历史supervise服务等；
3. 设计、编写adio、electric、power3个主题的测试用例；


1. 1.0架构协议转换开发：
  ①.生产、测试环境数据流处理流程梳理;
  ②.开发，测试带各个主题协议转换的forward服务（同步生产环境mqtt数据）；
2. mysql连接池研究、重新整理；
3. 补华贝电子月初因SIM卡欠费缺失电量电费数据；

1. 1.0架构升级2.0过程中，生产、测试环境数据流向、进程服务整理和XWiki文档撰写；
2. 开发按小时导出任意时间段电量电费数据脚本，部署至运维服务器；
3. 中山大学、勤诚达项目5～10月份月度服务报告；
4. 业务后台重要技术栈：Celery官方文档深入学习，进度：50%+；


1. log主题存储问题修复：统一log主题协议；
2. 处理采集器二表法接入方式上传三相数据问题；
3. 重新整理forward和XWiKi；
4. 开发带协议转换的mqtt-2-tdengine，及pytest测试用例；
5. pytest测试用例踩坑排查；


1. 1.0协议升级收尾，调整运行环境，部署tdengine_proto_convert服务至测试、生产环境；
2. 1.0协议升级新增log主题，及pytest测试用例；
3. 业务后台服务升级梳理、讨论、各模块分工；
4. mysql查询性能验证测试，使用规范约定；
5. tdengine查询性能测试，接口重新封装；
6. 确定2.0架构识电U业务后台方案，重写识电U相关业务；


1. 2.0架构识电U开发及测试用例编写：
   ①. appliance：电动车电池识别；
   ②. workshop电烙铁、小作坊识别；
   ③. power_wave：功率波动统计；
2. 清理新接入项目脏数据，查询知电U管理版数据异常问题（缺数）；
3. 知电U负荷分析12月份数据为空问题修复，补齐缺失数据；

2021-12月份
1. 研究tdengine dump工具，将旧版tdengine集群数据迁移至新版tdengine集群；
2. 华为云鲲鹏适配对接：
   ①. 产品分析，技术栈系统信息表填写；画云服务技术方案架构图、组网架构图；
   ②. 测试环境云服务器资源需求分析、资源价格计算表填写；
3. 知电U新需求开发：电价策略支持修改，设置生效时间；并同步至2.0架构；


1. 研究本地python client连不上服务器tdengine问题；
2. 测试环境tdengine集群版本升级，采用小代价方案扩容td集群节点挂载磁盘；
3. 重做电池、电烙铁实验，重做appliance、workshop测试用例；
4. 新增location流水表location_his_record，补历史流水数据；
5. 研究Grafana、Prometheus监控体系，配置测试环境TiDB集群各组件监控仪表盘；
6. 重新整理装置接入逻辑，支持装置第一期接入，后期接入，接入信息清理；

1. 装置接入、后期追加接入、接入信息清理脚本开发；
2. 知电U、安电U、识电U、智电U接入脚本测试用例开发；
3. 识电U支持独立设置告警间隔时间；

1.功率因数、最大需量、经济运行、移峰填谷算法重新设计、实现，及配置数据迁移

①.	②.	③.	④.	⑤.	⑥.	⑦.	⑧.	⑨.